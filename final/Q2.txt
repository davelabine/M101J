// Use the aggregation framework to figure out pairs of people that tend to communicate a lot.
// Tricky: a recipient may appear multiple times in To:, for a message, don't count them twice.

// Assume it isn't tricky, how would we solve?
db.messages.aggregate([
	{$unwind:"$headers.To"},
	{$group:
	 {
	 	_id:{from:"$headers.From", to:"$headers.To"},
	 	total: {$sum:1}
	 }
	},
	{$sort:{total:-1}}
])

// When we unwind, we will see repeats like this that we need to eliminate, 
// we only want to count them once.
// id: 1, from: a, to: b
// id: 1, from: a, to: b
// id: 2, from: a, to: b
// Hm, first eliminate message duplicates, THEN count.  group on ID first, THEN count on from | to
// Seems kind of redundant, why can't we do in first pass?  Because if we did it in the first pass 
// we would have to count users from the same message twice.  Doing it in two steps allows us to
// filter duplicates in the first pass, then count them in the second.

db.messages.aggregate([
	{$unwind:"$headers.To"},
	{$group:
	 {
	 	_id:{msgId:"$_id", from:"$headers.From", to:"$headers.To"},
	 }
	},
	{$group:
	 {
	    _id:{from:"$_id.from", to:"$_id.to"},
	    total: {$sum:1}
	 }
	},
	{$sort:{total:-1}}
], {allowDiskUse:true}
)

